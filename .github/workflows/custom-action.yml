name: 03-custom-action
on:
  push:
    branches-ignore:
      - '*'
      - '*/*'
      - '**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: stage
      project_id:
        type: choice
        description: 'Project ID to deploy'
        required: true
        default: 'uc-next'
        options:
          - uc-next
          - springbuilder-x
      tag:
        description: 'Input Image TAG'
        required: true
        default: release/1.0.0
      action:
        description: 'Input Action command'
        required: true
        default: build
env:
  PROJECT_ID: ${{ github.event.inputs.project_id }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  ENVIRONMENT: ${{ github.event.inputs.environment }}
  BUILD: ${{ vars.BUILD }}
  TAG: ${{ github.event.inputs.tag }}
  ACTION: ${{ github.event.inputs.action }}

jobs:
  access_check:
    runs-on: ubuntu-latest
    steps:
      - uses: kubmeta/team-membership@master
        id: checkUserMember
        with:
          username: ${{ github.actor }}
          team: 'devops'
          GITHUB_TOKEN: ${{secrets.INFRASTRUCTURE_TOKEN}}

      - name: Is user not a team member?
        run: |
          echo "You do not have the necessary permissions to execute this workflow in the specified environment, $ENVIRONMENT."
          echo "Cancelling...."
          gh run cancel $GITHUB_RUN_ID
        if: ${{ steps.checkUserMember.outputs.isTeamMember == 'false' }}

  deploy:
    needs: access_check
    runs-on: ubuntu-latest
    outputs:
      service_name: ${{ steps.set_output.outputs.service_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

      - name: 'Get External'
        run: 'make get-external INFRASTRUCTURE_TOKEN=${{ secrets.INFRASTRUCTURE_TOKEN }}'

      - name: Set output
        id: set_output
        run: make export-output-github

      - name: 'configure Docker & Cluster'
        run: 'make auth ENVIRONMENT=$ENVIRONMENT SERVICE=${{ steps.set_output.outputs.service_name }} PROJECT_ID=$PROJECT_ID'

      - name: 'Checking for the existence of the Docker image ...'
        if: env.action == 'deploy'
        run: 'make check-image ENVIRONMENT=$ENVIRONMENT SERVICE=${{ steps.set_output.outputs.service_name }} PROJECT_ID=$PROJECT_ID TAG=$TAG'

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: simenandre/setup-gke-gcloud-auth-plugin@v1

      - name: Download helm value
        run: 'make download INFRASTRUCTURE_TOKEN=${{ secrets.INFRASTRUCTURE_TOKEN }} ENVIRONMENT=$ENVIRONMENT SERVICE=${{ steps.set_output.outputs.service_name }} PROJECT_ID=$PROJECT_ID'

      - name: Action service
        run: 'make $ACTION TAG=$TAG HELM=${{ vars.HELM_VERSION }} ENVIRONMENT=$ENVIRONMENT SERVICE=${{ steps.set_output.outputs.service_name }} PROJECT_ID=$PROJECT_ID'

  my-pandayoplus-job:
    needs: deploy
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: ${{ needs.deploy.outputs.service_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: kubmeta/slack@pandayoplus
        with:
          webhook-url: ${{ secrets.CHANNEL_CI_REPORTING_PANDAYOPLUS_WEBHOOK_URL }}
          status: ${{ needs.deploy.result }}
          message:  "`${{ github.ref_name }}` branch deployment to Project ID ${{ env.PROJECT_ID }}  and ENVIRONMENT ${{ env.ENVIRONMENT }} for SERVICE ${{ env.SERVICE_NAME }}"
    if: ${{ !cancelled() && needs.deploy.result != 'skipped' && needs.deploy.result != 'cancelled' }}

name: additional

on:
  push:
    branches-ignore:
      - '*'
      - '*/*'
      - '**'

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  ENVIRONMENT: "sq1"
  BUILD: ${{ vars.BUILD }}
jobs:
  build_push_deploy:
    runs-on: ubuntu-latest
    outputs:
      service_name: ${{ steps.set_output.outputs.SERVICE_NAME }}
      timeout_minutes: ${{ steps.set_output.outputs.TIMEOUT_MINUTES }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

      - name: 'Get External'
        run: 'make get-external INFRASTRUCTURE_TOKEN=${{ secrets.INFRASTRUCTURE_TOKEN }}'

      - name: Set output
        id: set_output
        run: |
          make export-output-github
          TIMEOUT_MINUTES=$(( ${{ vars.APPROVAL_TIMEOUT_MINUTES_LIVE }} + 0 ))
          echo "Converted number: $TIMEOUT_MINUTES"
          echo "TIMEOUT_MINUTES=$TIMEOUT_MINUTES" >> $GITHUB_OUTPUT

      - name: 'configure Docker & Cluster'
        run: 'make auth ENVIRONMENT=$ENVIRONMENT SERVICE=${{ steps.set_output.outputs.SERVICE_NAME }}'

      - name: 'Test 1'
        run: 'make test1'

      - name: 'Make build push ${{ steps.set_output.outputs.SERVICE_NAME }} for ${{ env.ENVIRONMENT }}'
        run: 'make build_github ENVIRONMENT=$ENVIRONMENT SERVICE=${{ steps.set_output.outputs.SERVICE_NAME }}'

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: simenandre/setup-gke-gcloud-auth-plugin@v1

      - name: Download helm value
        run: 'make download INFRASTRUCTURE_TOKEN=${{ secrets.INFRASTRUCTURE_TOKEN }} ENVIRONMENT=$ENVIRONMENT SERVICE=${{ steps.set_output.outputs.SERVICE_NAME }}'

      - name: 'Deploy ${{ steps.set_output.outputs.SERVICE_NAME }} to ${{ env.ENVIRONMENT }}'
        run: 'make deploy HELM=${{ vars.HELM_VERSION }} ENVIRONMENT=$ENVIRONMENT SERVICE=${{ steps.set_output.outputs.SERVICE_NAME }}'

      - name: 'Test 2'
        run: 'make test2'

  my-pandayoplus-job:
    needs: build_push_deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: kubmeta/slack@pandayoplus
        with:
          webhook-url: ${{ secrets.CHANNEL_CI_REPORTING_PANDAYOPLUS_WEBHOOK_URL }}
          status: ${{ needs.build_push_deploy.result }}
          message:  "`${{ github.ref_name }}` branch deployment to Project ID uc-ucraft  and ENVIRONMENT ${{ env.ENVIRONMENT }}"
    if: ${{ !cancelled() && needs.build_push_deploy.result != 'skipped' && needs.build_push_deploy.result != 'cancelled' }}
